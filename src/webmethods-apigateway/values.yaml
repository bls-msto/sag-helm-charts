# Default values for webmethods-apigateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: ghcr.io/softwareag-government-solutions
  repository: webmethods-apigateway
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: dev-10.11-latest

## image pull secrets
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

# dict of envs
envConfigs: {}
envSecretConfigs: {}

# we have to setup 2 different service, because 1 is sticky, not the other...
service:
  gwruntime:
    type: ClusterIP
    port: 5555
    annotations: {}
  gwui:
    type: ClusterIP
    port: 9072
    annotations: {}

containerPorts:
  - containerPort: 5555
    name: gwruntime
    protocol: TCP
  - containerPort: 5543
    name: gwruntimessl
    protocol: TCP
  - containerPort: 9072
    name: gwui
    protocol: TCP
  - containerPort: 9073
    name: gwuissl
    protocol: TCP

## type of clustering - possible values: none (default), terracotta, ignite
clusteringType: none

## elasticSearchType - possible value: local, external
elasticSearchType: local

## elasticSearchType - possible value: local, external
kibanaType: local

## clustering - Terracotta url
clusteringTerracottaUrl: ""

# external common configs
fullConfigs: {}

# external common configs
commonConfigs: {}

#### common blocks to help with config building
configs_default_elasticsearch:
  apigw:
    elasticsearch:
      tenantId: apigateway
      hosts: set_via_env_eshost1
      autostart: false
      http:
        keepAlive: true
        keepAliveMaxConnections: 10
        keepAliveMaxConnectionsPerRoute: 100
        connectionTimeout: 1000
        socketTimeout: 10000
        maxRetryTimeout: 100000
      https:
        enabled: false
        enforceHostnameVerification: false
        # keystoreFilepath: "{{ webmethods_apigateway_keystore_filepath }}"
        # truststoreFilepath: "{{ webmethods_apigateway_truststore_filepath }}"
        # keystoreAlias: "{{ webmethods_apigateway_keystore_keyalias }}"
        # keystorePassword: "{{ webmethods_apigateway_keystore_password }}"
        # truststorePassword: "{{ webmethods_apigateway_truststore_password }}"
      sniff:
        enable: false
        timeInterval: 1000
      outboundProxy:
        enabled: false
        alias: somealias
      clientHttpResponseSize: 1001231

configs_default_kibana:
  apigw:
    kibana:
      dashboardInstance: http://localhost:9405
      autostart: true

configs_default_clustering_terracotta:
  apigw:
    cluster:
      aware: true
      name: APIGatewayCluster
      sessTimeout: 60
      actionOnStartupError: shutdown
      tsaUrls: set_via_env_tsa1:9510,set_via_env_tsa2:9510

configs_default_clustering_ignite:
  apigw:
    cluster:
      aware: true
      name: APIGatewayCluster
      sessTimeout: 60
      actionOnStartupError: shutdown
      ignite:
        hostnames: set_via_env_apigwserver1,set_via_env_apigwserver2
        discoveryPort: 47100
        communicationPort: 47500
        portRange: 5

# the licensing needed for the product
licenseSecret: {}
  # name: ""
  # key: ""
  # path: ""

licenseTerracottaSecret: {}
  # name: ""
  # key: ""
  # path: ""

configurator:
  enabled: false
  verbose: false
  envConfigs: {}
  envSecretConfigs: {}

ingress:
  gwruntime:
    enabled: false
    annotations: {}
    host: chart-example.local
    # tls:
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
    paths:
      - path: /gateway
        pathType: Prefix
      - path: /rest
        pathType: Prefix
      - path: /invoke
        pathType: Prefix
      - path: /WmAPIGateway
        pathType: Prefix
  gwui:
    enabled: false
    annotations: {}
    host: chart-example.local
    # tls:
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
    paths:
      - path: /
        pathType: Prefix
  custom:
    enabled: false
    annotations: {}
    hosts:
      - host: chart-example.local
        paths: []
          # - path: /
          #   pathType: Prefix
          #   backendServiceName: someservice
          #   backendServicePort: 5555
    # tls:
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}