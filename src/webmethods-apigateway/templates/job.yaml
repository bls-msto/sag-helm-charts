{{- if .Values.configurator.enabled }}
{{- $svcGwruntimeName := (include "webmethods-apigateway.gwruntimeFullname" .) }}
{{- $svcGwruntimePort := .Values.service.gwruntime.port }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "webmethods-apigateway.fullname" . }}-configurator"
  labels:
    {{- include "webmethods-apigateway.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.configurator.enableHooks }}
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- end }}
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 1800
  template:
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: "{{ .Chart.Name }}-configurator"
        {{- if .Values.configurator.image.registry }}
        image: {{ printf "%s/%s:%s" .Values.configurator.image.registry .Values.configurator.image.repository (.Values.configurator.image.tag | default .Chart.AppVersion) }}
        {{- else }}
        image: {{ printf "%s:%s" .Values.configurator.image.repository (.Values.configurator.image.tag | default .Chart.AppVersion) }}
        {{- end }}
        imagePullPolicy: {{ .Values.configurator.image.pullPolicy }}
        {{- if .Values.configurator.verbose }}
        args: ["-vvv","apply_configs.yaml"]
        {{- else }}
        args: ["apply_configs.yaml"]
        {{- end }}
        env:
          - name: env_apigateway_configure_default_ignore_errors
            value: "false"
          - name: env_apigateway_protocol
            value: "{{ .restProtocol | default "http" }}"
          - name: env_apigateway_host
            value: "{{ .restHost | default $svcGwruntimeName }}"
          - name: env_apigateway_port
            value: "{{ .restPort | default $svcGwruntimePort }}"
          {{- with .Values.configurator.settings }}
          {{- if .restUsername }}
          - name: env_apigateway_rest_user
            value: "{{ .restUsername }}"
          {{- end }}
          {{- if .restPasswordSecret }}
          - name: env_apigateway_rest_password
            valueFrom:
              secretKeyRef:
                name: "{{ .restPasswordSecret.name }}"
                key: "{{ .restPasswordSecret.key }}"
          {{- end }}
          {{- if .restPasswordOldSecret }}
          - name: env_apigateway_rest_password_old
            valueFrom:
              secretKeyRef:
                name: "{{ .restPasswordOldSecret.name }}"
                key: "{{ .restPasswordOldSecret.key }}"
          {{- end }}
          {{- with .loadBalancer }}
          - name: env_apigateway_configure_lb
            value: "true"
          {{- if .http }}
          - name: env_apigateway_lb_http_url
            value: "{{ .http }}"
          {{- end }}
          {{- if .https }}
          - name: env_apigateway_lb_https_url
            value: "{{ .https }}"
          {{- end }}
          {{- if .websocket }}
          - name: env_apigateway_lb_websocket_url
            value: "{{ .websocket }}"
          {{- end }}
          {{- if .webapp }}
          - name: env_apigateway_lb_webapp_url
            value: "{{ .webapp }}"
          {{- end }}
          {{- end }}
          {{- with .portalConnect }}
          - name: env_apigateway_configure_portalgateway
            value: "true"
          - name: env_apigateway_configure_portalgateway_ignore_errors
            value: "true"
          - name: env_apigateway_portalgateway_gateway_url
            value: "{{ .apigateway.protocol | default "http" }}://{{ .apigateway.host | default $svcGwruntimeName }}:{{ .apigateway.port | default $svcGwruntimePort }}"
          - name: env_apigateway_portalgateway_gateway_username
            value: "{{ .apigateway.username }}"          
          - name: env_apigateway_portalgateway_gateway_password
            valueFrom:
              secretKeyRef:
                name: "{{ .apigateway.passwordSecret.name }}"
                key: "{{ .apigateway.passwordSecret.key }}"
          {{- if .portalType }}
          {{- if eq (lower .portalType) "devportal" }}
          - name: env_apigateway_portalgateway_portaltype
            value: "devportal"
          {{- if .url }}
          - name: env_apigateway_portalgateway_devportal_url
            value: "{{ .url }}"
          {{- end }}
          {{- if .tenant }}
          - name: env_apigateway_portalgateway_devportal_tenant
            value: "{{ .tenant }}"
          {{- end }}
          {{- if .stage }}
          - name: env_apigateway_portalgateway_devportal_stage
            value: "{{ .stage }}"
          {{- end }}
          {{- if .username }}
          - name: env_apigateway_portalgateway_devportal_username
            value: "{{ .username }}"
          {{- end }}
          {{- if .passwordSecret }}
          - name: env_apigateway_portalgateway_devportal_password
            valueFrom:
              secretKeyRef:
                name: "{{ .passwordSecret.name }}"
                key: "{{ .passwordSecret.key }}"
          {{- end }}
          {{- end }}
          {{- if eq (lower .portalType) "apiportal" }}
          - name: env_apigateway_portalgateway_portaltype
            value: "apiportal"
          {{- if .url }}
          - name: env_apigateway_portalgateway_apiportal_url
            value: "{{ .url }}"
          {{- end }}
          {{- if .tenant }}
          - name: env_apigateway_portalgateway_apiportal_tenant
            value: "{{ .tenant }}"
          {{- end }}
          {{- if .stage }}
          - name: env_apigateway_portalgateway_apiportal_stage
            value: "{{ .stage }}"
          {{- end }}
          {{- if .username }}
          - name: env_apigateway_portalgateway_apiportal_username
            value: "{{ .username }}"
          {{- end }}
          {{- if .passwordSecret }}
          - name: env_apigateway_portalgateway_apiportal_password
            valueFrom:
              secretKeyRef:
                name: "{{ .passwordSecret.name }}"
                key: "{{ .passwordSecret.key }}"
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .extendedSettings }}
          - name: env_apigateway_configure_extended_settings
            value: "true"
          {{- end }}
          {{- end }}
          {{- with .Values.configurator.envConfigs }}
          {{- include "webmethods-apigateway.dictToEnvs" . | indent 10 }}
          {{- end }}
          {{- with .Values.configurator.envSecretConfigs }}
          {{- include "webmethods-apigateway.secretsDictToEnvs" . | indent 10 }}
          {{- end }}
          {{- with .Values.configurator.env }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        
{{- end }}