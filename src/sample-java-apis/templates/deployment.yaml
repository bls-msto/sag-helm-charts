apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webmethods-sample-apis.fullname" . }}
  labels:
    {{- include "webmethods-sample-apis.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "webmethods-sample-apis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "webmethods-sample-apis.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "webmethods-sample-apis.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.image.registry }}
          image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- else }}
          image: {{ printf "%s:%s" .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- end }}        
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.appPort }}
          livenessProbe:
            httpGet:
              path: {{ printf "%s/%s" .Values.appContextPath .Values.appHealthCheckPath }}
              port: {{ .Values.service.port }}
              {{- with .Values.appHealthCheckHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            {{- with .Values.livenessProbe }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.appPort }}
            - name: app_port
              value: {{ .Values.appPort }}
            {{- end }} 
            {{- if .Values.appContextPath }}
            - name: app_context_path
              value: {{ .Values.appContextPath }}
            {{- end }} 
            {{- if .Values.appHealthCheckPath }}
            - name: app_healthcheck_path
              value: {{ .Values.appHealthCheckPath }}
            {{- end }} 
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{ with .Values.microgateway }}
        {{- if .enabled }}
        - name: {{ .Chart.Name }}-mgw
          {{- if .image.registry }}
          image: {{ printf "%s/%s:%s" .image.registry .image.repository (.image.tag | default .Chart.AppVersion) }}
          {{- else }}
          image: {{ printf "%s:%s" .image.repository (.image.tag | default .Chart.AppVersion) }}
          {{- end }} 
          imagePullPolicy: {{ .image.pullPolicy }}
          {{- with .commandArgs }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: runtimeport
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
              - /bin/sh
              - -c
              - ./files/k8s-lifenesscheck.sh
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
              - /bin/sh
              - -c
              - ./files/k8s-readinesscheck.sh
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
            - name: configs-volume
              mountPath: /configs
            {{- if .Values.microgwLicenseSecret }}
            - name: microgateway-license
              mountPath: /opt/softwareag/config/license.xml
              subPath: license.xml
              readOnly: false
            {{- end }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}