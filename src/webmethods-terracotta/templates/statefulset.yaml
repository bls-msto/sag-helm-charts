{{- $replicas := int (toString (.Values.replicaCount)) }}
{{- if gt $replicas 3 }}
{{- $replicas = 3 }}
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "webmethods-terracotta.fullname" . }}
  labels:
    {{- include "webmethods-terracotta.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "webmethods-terracotta.fullname" . }}-hl
  replicas: {{ $replicas }}
  # The default is to deploy all pods serially. By setting this to parallel all pods are started at
  # the same time when bootstrapping the cluster
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: 
      partition: 0
{{- if or (eq .Values.persistence.diskstore.enabled true) (eq .Values.persistence.backups.enabled true) (eq .Values.persistence.index.enabled true) }}
  volumeClaimTemplates:
  {{- if .Values.persistence.diskstore.enabled }}
  - metadata:
      name: diskstore-{{ include "webmethods-terracotta.fullname" . }}
    {{- if .Values.persistence.diskstore.labels.enabled }}
      labels:
{{- include "webmethods-terracotta.labels" . | nindent 8 }}
    {{- end }}
    {{- with .Values.persistence.annotations }}
      annotations:
{{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
{{ toYaml .Values.volumeClaimTemplates.diskstore | indent 6 }}
  {{- end }}
  {{- if .Values.persistence.backups.enabled }}
  - metadata:
      name: backups-{{ include "webmethods-terracotta.fullname" . }}
    {{- if .Values.persistence.backups.labels.enabled }}
      labels:
        release: {{ .Release.Name | quote }}
        chart: {{ .Chart.Name }}
        app: {{ include "webmethods-terracotta.fullname" . }}
    {{- end }}
    spec:
{{ toYaml .Values.volumeClaimTemplates.backups | indent 6 }}
  {{- end }}
  {{- if .Values.persistence.index.enabled }}
  - metadata:
      name: index-{{ include "webmethods-terracotta.fullname" . }}
    {{- if .Values.persistence.index.labels.enabled }}
      labels:
        release: {{ .Release.Name | quote }}
        chart: {{ .Chart.Name }}
        app: {{ include "webmethods-terracotta.fullname" . }}
    {{- end }}
    spec:
{{ toYaml .Values.volumeClaimTemplates.index | indent 6 }}
  {{- end }}
{{- end }}
  selector:
    matchLabels:
      {{- include "webmethods-terracotta.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "webmethods-terracotta.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "webmethods-terracotta.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.image.registry }}
          image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- else }}
          image: {{ printf "%s:%s" .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 9510
              name: tsaport
              protocol: TCP
            - containerPort: 9520
              name: jmxport
              protocol: TCP
            - containerPort: 9530
              name: groupport
              protocol: TCP
            - containerPort: 9540
              name: mgtport
              protocol: TCP
            - containerPort: 9889
              name: http
              protocol: TCP
          startupProbe:
            failureThreshold: 30
            periodSeconds: 15
            exec:
              command:
              - /bin/bash
              - ./healthcheck.sh
          livenessProbe:
            successThreshold: 1
            failureThreshold: 4
            periodSeconds: 15
            timeoutSeconds: 5
            exec:
              command:
              - /bin/bash
              - ./healthcheck.sh
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
          {{- if .Values.persistence.diskstore.enabled }}
            - name: diskstore-{{ include "webmethods-terracotta.fullname" . }}
              mountPath: /opt/softwareag/Terracotta/data/diskstore
          {{- end }}
          {{- if .Values.persistence.backups.enabled }}
            - name: backups-{{ include "webmethods-terracotta.fullname" . }}
              mountPath: /opt/softwareag/Terracotta/data/backups
          {{- end }}
          {{- if .Values.persistence.index.enabled }}
            - name: index-{{ include "webmethods-terracotta.fullname" . }}
              mountPath: /opt/softwareag/Terracotta/data/index
          {{- end }}
          {{- with .Values.licenseSecret }}
            - name: terracotta-license
              mountPath: /opt/softwareag/Terracotta/
              # subPath: {{ .path }}
              readOnly: true
          {{- end }}
      volumes:
      {{- with .Values.licenseSecret }}
        - name: terracotta-license
          secret:
            secretName: {{ .name }}
            items:
            - key: {{ .key }}
              path: {{ .path }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
